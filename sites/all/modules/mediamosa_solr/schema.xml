<?xml version="1.0" encoding="UTF-8" ?>

<!-- $Id: $ -->

<!--
 This is the MediaMosa Solr schema file. This file should be named "schema.xml"
 and should be in the conf directory under the solr home
 (i.e. ./solr/conf/schema.xml by default)
 or located where the classloader for the Solr webapp can find it.

 For more information, on how to customize this file, please see
 http://wiki.apache.org/solr/SchemaXml
-->

<schema name="mediamosa-3.5.4-asset" version="1.5">

  <!-- attribute "name" is the name of this schema and is only used for display purposes.
       Applications should change this to reflect the nature of the search collection.
       version="1.2" is Solr's version number for the schema syntax and semantics.  It should
       not normally be changed by applications.
       1.0: multiValued attribute did not exist, all fields are multiValued by nature
       1.1: multiValued attribute introduced, false by default
       1.2: omitTermFreqAndPositions attribute introduced, true by default except for text fields.
       1.4: default auto-phrase (QueryParser feature) to off
       1.5: omitNorms defaults to true for primitive field types (int, float, boolean, string...)
     -->

  <!--
    Notes on MediaMosa;
      - Sorl search is based on the version of MySQL SQL.
      - MySQL uses Innodb.
      - MySQL searches are case insensitive (default) and case sensitive.
      - MySQL uses UTF8.
      - Case sensitive search is only used on metadata.
      - All other searches are case insensitive.
    -->

  <types>
    <!--
      Each asset belongs to one app_id.
      -->
    <fieldType name="app_id" class="solr.TrieIntField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>

    <!--
      We use a seperate type for MediaMosa asset_ids (sortable).
      case-sensitive: verified.
      wildcards: yes.
      sortable: yes.
      -->
    <fieldType name="asset_id" class="solr.StrField" multiValued="false" omitNorms="true"/>

    <!--
      String ID is for owner, group and other string related sortable data (sortable).
      Its also used for exact searching with wildcards. Unit test will test this
      type if it still conform what it needs to do.
      -->
    <fieldType name="string_id" class="solr.StrField" sortMissingLast="true" multiValued="false" omitNorms="true"/>

    <fieldType name="string_id_ci" class="solr.TextField" omitNorms="true">
      <analyzer>
        <!-- KeywordTokenizer does no actual tokenizing, so the entire
             input string is preserved as a single token
          -->
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <!--
      Not intended for full text searching. More technical data. (sortable).
      -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true"  multiValued="false" omitNorms="true"/>

    <!--
      Default date type (sortable).
      -->
    <fieldType name="date" class="solr.DateField" sortMissingLast="true" omitNorms="true"/>

    <!--
      Default int type (sortable).
      -->
    <fieldType name="int" class="solr.SortableIntField" sortMissingLast="true" omitNorms="true"/>

    <!--
      Integer ID is ID of row using integer. (sortable).
      -->
    <fieldType name="int_id" class="solr.StrField" sortMissingLast="true" multiValued="true" omitNorms="true"/>

    <!-- boolean type: "true" or "false" -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>

    <!--
      MediaMosa metadata types; (unsorted)
      -->
    <fieldType name="val_int" class="solr.TrieIntField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="val_date" class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0"/>
    <!-- A text field that only splits on whitespace for exact matching of words -->
    <!-- A general text field that has reasonable, generic
         cross-language defaults: it tokenizes with StandardTokenizer,
         removes stop words from case-insensitive "stopwords.txt"
         (empty by default), and down cases.  At query time only, it
         also applies synonyms. -->
    <fieldType name="val_char" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.ReversedWildcardFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="val_char_exact" class="solr.TextField" omitNorms="true">
      <analyzer>
        <!-- KeywordTokenizer does no actual tokenizing, so the entire
             input string is preserved as a single token
          -->
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="val_char_exact_cs" class="solr.TextField" omitNorms="true">
      <analyzer>
        <!-- KeywordTokenizer does no actual tokenizing, so the entire
             input string is preserved as a single token
          -->
        <tokenizer class="solr.KeywordTokenizerFactory"/>
      </analyzer>
    </fieldType>

    <!--
      MediaMosa metadata types; (for sorting)
    -->
    <fieldType name="sval_int" class="solr.SortableIntField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="sval_date" class="solr.DateField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="sval_char" class="solr.StrField" sortMissingLast="true" omitNorms="true" />

    <!-- A general unstemmed text field that indexes tokens normally and also
         reversed (via ReversedWildcardFilterFactory), to enable more efficient leading wildcard queries. -->
    <fieldType name="val_char_rev" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.ReversedWildcardFilterFactory" withOriginal="true" maxPosAsterisk="3" maxPosQuestion="2" maxFractionAsterisk="0.33"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
   </types>

  <fields>
    <!-- Valid attributes for fields:
      name: mandatory - the name for the field
       type: mandatory - the name of a previously defined type from the <types>
       section
      indexed: true if this field should be indexed (searchable or sortable)
      stored: true if this field should be retrievable
      compressed: [false] if this field should be stored using gzip compression
        (this will only apply if the field type is compressable; among
        the standard field types, only TextField and StrField are)
      multiValued: true if this field may contain multiple values per document
      omitNorms: (expert) set to true to omit the norms associated with
        this field (this disables length normalization and index-time
        boosting for the field, and saves some memory).  Only full-text
        fields or fields that need an index-time boost need norms.
      termVectors: [false] set to true to store the term vector for a
        given field.
        When using MoreLikeThis, fields used for similarity should be
        stored for best performance.
      termPositions: Store position information with the term vector.
        This will increase storage costs.
      termOffsets: Store offset information with the term vector. This
        will increase storage costs.
      default: a value that should be used if no value is specified
        when adding a document.
    -->

    <!--
      The app_id is always stored. (searchable, sortable)
      -->
    <field name="app_id" type="app_id" indexed="true" stored="false" required="true" multiValued="false" />

    <!--
      The asset_id is always stored. (searchable, sortable)
      -->
    <field name="asset_id" type="asset_id" indexed="true" stored="true" required="true" multiValued="false" />

    <!--
      The coll_id is optional. Asset can be in 0 or more collections.
      (searchable, sortable)

      Coll_id_ext is stored as;
      coll_id _ isprivate _ is_unappropriate
      coll_id _ owner_id
      -->
    <field name="coll_id" type="string_id" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="coll_id_ext" type="string_id" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="coll_id_owner" type="string_id_ci" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="mediafile_id" type="string_id" indexed="true" stored="false" required="false" multiValued="true" />

    <!--
      User fav.
      stored as; app_id _ username
      -->
    <field name="user_fav" type="string_id_ci" indexed="true" stored="false" required="false" multiValued="true" />

    <field name="owner_id" type="string_id_ci" indexed="true" stored="false" required="false" multiValued="false" />
    <field name="group_id" type="string_id_ci" indexed="true" stored="false" required="false" multiValued="false" />
    <field name="provider_id" type="string_id_ci" indexed="true" stored="false" required="false" multiValued="false" />
    <field name="reference_id" type="string_id_ci" indexed="true" stored="false" required="false" multiValued="false" />

    <field name="play_restriction_start" type="date" indexed="true" stored="false" required="false" multiValued="false" />
    <field name="play_restriction_end" type="date" indexed="true" stored="false" required="false" multiValued="false" />

    <field name="mediafile_duration" type="string" indexed="true" stored="false" required="false" multiValued="false" />
    <field name="mediafile_container_type" type="string" indexed="true" stored="false" required="false" multiValued="false" />
    <field name="mediafile_mime_type" type="string" indexed="true" stored="false" required="false" multiValued="false" />

    <field name="mime_type" type="string" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="filename" type="string" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="uri" type="string" indexed="true" stored="false" required="false" multiValued="true" />

    <field name="videotimestamp" type="date" indexed="true" stored="false" required="false" multiValued="false" />
    <field name="videotimestampmodified" type="date" indexed="true" stored="false" required="false" multiValued="false" />
    <field name="created" type="date" indexed="true" stored="false" required="false" multiValued="false" />
    <field name="changed" type="date" indexed="true" stored="false" required="false" multiValued="false" />

    <field name="viewed" type="int" indexed="true" stored="false" required="true" multiValued="false" />
    <field name="played" type="int" indexed="true" stored="false" required="true" multiValued="false" />

    <!--
      The batch_id is optional. Asset can be in 0 or more batches.
      (searchable, sortable)
      -->
    <field name="batch_id" type="int" indexed="true" stored="false" required="false" multiValued="true" />

    <!--
      Is empty asset flag.
      -->
    <field name="is_empty_asset" type="boolean" indexed="true" stored="false" required="true" multiValued="false" />
    <field name="isprivate" type="boolean" indexed="true" stored="false" required="true" multiValued="false" />
    <field name="is_unappropriate" type="boolean" indexed="true" stored="false" required="true" multiValued="false" />
    <field name="is_external" type="boolean" indexed="true" stored="false" required="true" multiValued="false" />

    <!--
      ACL. rules.
      mf: [TRUE|FALSE] (TRUE: has mediafiles)

      mf_org:[TRUE|FALSE] (TRUE: has 1 or more original mf)

      mf_org_acl_obj_acl_[name|group][]:

      mf_org_acl_obj_[owner|group][]:

      mf_acl_master_slave[]:
      is_protected; TRUE: TRUE or DOMAIN_REALM. FALSE: FALSE or USER_USERGROUP
      acl_type_acl_id; is only set when is_protected is != FALSE.
      app_id _ slave_app_id _ master_is_protected _ [acl_type _ acl_id]

      -->
    <field name="mf" type="boolean" indexed="true" stored="false" required="true" multiValued="false" />
    <field name="mf_org" type="boolean" indexed="true" stored="false" required="true" multiValued="false" />
    <field name="mf_org_is_protected" type="int" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="mf_org_acl_obj_acl_name" type="int" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="mf_org_acl_obj_acl_group" type="int" indexed="true" stored="false" required="false" multiValued="true" />

    <!--
      string_id[_ci] type on these are very important.
      -->
    <field name="mf_org_owner" type="string_id_ci" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="mf_org_group" type="string_id_ci" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="mf_acl_master_slave" type="string_id" indexed="true" stored="false" required="false" multiValued="true" />

    <!--
      ACL CQL context set.
      The ACL CQL context set supports allows EGAs to search on their acl settings.

      mf_acl_user: mediamosa_acl_name.USER
      mf_acl_user_group: mediamosa_acl_name.USER_GROUP
      mf_acl_domain: mediamosa_acl_name.DOMAIN
      mf_acl_realm: mediamosa_acl_name.REALM
      mf_acl_realm_prefix: mediamosa_acl_name.REALM_PREFIX
      -->
    <field name="mf_app_id_master" type="int" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="mf_app_id_slave" type="int" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="asset_is_master_slaved" type="boolean" indexed="true" stored="false" required="true" multiValued="false" />
    <field name="mf_is_protected" type="boolean" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="mf_acl_user" type="string_id_ci" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="mf_acl_user_group" type="string_id_ci" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="mf_acl_domain" type="string_id_ci" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="mf_acl_realm" type="string_id_ci" indexed="true" stored="false" required="false" multiValued="true" />
    <field name="mf_acl_realm_prefix" type="string_id_ci" indexed="true" stored="false" required="false" multiValued="true" />

    <!--
      Because mediamosa supports custom metadata, we must use dynamic fields for
      all metadata, including dc, qdc and czp.

      All metadata fields can be multivalued. However, sort fields in solr must
      be non-multi. Depending on the sort order, lo or hi field is used. These
      fields hold either the highest or the lowest value of the same field.
      -->

    <!-- Searchable fields -->
    <dynamicField name="*_md" type="string" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_vc" type="val_char" indexed="true" stored="false" multiValued="true" termVectors="true"/>
    <dynamicField name="*_vi" type="val_int" indexed="true" stored="false" multiValued="true" termVectors="true"/>
    <dynamicField name="*_vd" type="val_date" indexed="true" stored="false" multiValued="true" termVectors="true"/>

    <!-- Searchable exact fields -->
    <dynamicField name="*_vc_exact" type="val_char_exact" indexed="true" stored="false" multiValued="true" termVectors="true"/>
    <dynamicField name="*_vc_exact_cs" type="val_char_exact_cs" indexed="true" stored="false" multiValued="true" termVectors="true"/>

    <!-- Sortable fields lo (asc searching) -->
    <dynamicField name="*_svc_lo" type="sval_char" indexed="true" stored="false" multiValued="false" termVectors="true"/>
    <dynamicField name="*_svi_lo" type="sval_int" indexed="true" stored="false" multiValued="false" termVectors="true"/>
    <dynamicField name="*_svd_lo" type="sval_date" indexed="true" stored="false" multiValued="false" termVectors="true"/>

    <!-- Sortable fields hi (desc searching) -->
    <dynamicField name="*_svc_hi" type="sval_char" indexed="true" stored="false" multiValued="false" termVectors="true"/>
    <dynamicField name="*_svi_hi" type="sval_int" indexed="true" stored="false" multiValued="false" termVectors="true"/>
    <dynamicField name="*_svd_hi" type="sval_date" indexed="true" stored="false" multiValued="false" termVectors="true"/>

   <!-- Uncommenting the following will create a "timestamp" field using
        a default value of "NOW" to indicate when each document was indexed.
     <field name="timestamp" type="date" indexed="true" stored="false" default="NOW" multiValued="false"/>
     -->
  </fields>

  <!-- Field to use to determine and enforce document uniqueness.
    Unless this field is marked with required="false", it will be a required field
  -->
  <uniqueKey>asset_id</uniqueKey>
</schema>
