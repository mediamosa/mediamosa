<?php
// $Id$

/**
 * MediaMosa is Open Source Software to build a Full Featured, Webservice
 * Oriented Media Management and Distribution platform (http://mediamosa.org)
 *
 * Copyright (C) 2009 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

/**
 * @file
 * Solr version of MediaMosaAclTestCaseEga
 */

class MediaMosaSolrAclTestCaseEga extends MediaMosaAclTestCaseEga {
  // ------------------------------------------------------------------ Members.

  // ------------------------------------------------------------------ Functions.
  public static function getInfo() {

    $info = parent::getInfo();
    $info['name'] = 'SOLR - ' . $info['name'];
    $info['group'] = 'MediaMosa Solr';
    $info['automatic_run_disabled'] = module_exists('mediamosa_solr') ? FALSE : TRUE;

    return $info;
  }

  /**
   * Make sure SOLR is on.
   */
  public static function mediamosa_run_enabled() {
    return FALSE;
  }

  /**
   * Implements setUp().
   *
   * Any changes; see other classes(!)
   */
  protected function setUp() {
    // Get Solr url from parent install.
    $mediamosa_solr_url = mediamosa_solr_apache_solr_service::mediamosaGetUrl();

    // Run parent first so we are inside sandbox.
    // Call parent::setUp and preserve arguments.
    $args = func_get_args();

    $args = array_unique(array_merge(array(
      'mediamosa_solr',
    ), $args));

    // PHP 5.3 does not allow to use $this as we do here.
    if (drupal_substr(phpversion(), 0, 3) < '5.3') {
      call_user_func_array(array($this, 'parent::setUp'), $args);
    }
    else {
      call_user_func_array('parent::setUp', $args);
    }

    // Solr set url.
    variable_set('mediamosa_solr_url', $mediamosa_solr_url);

    // Turn on Solr as search engine.
    variable_set('mediamosa_search_engine', 'mediamosa_solr');
  }

  /**
   * Implements tearDown().
   *
   * Any changes; see other classes(!)
   */
  protected function tearDown() {

    $app_ids = array();
    if (!empty($this->a_app['app_id'])) {
      $app_ids[] = $this->a_app['app_id'];
    }
    if (!empty($this->a_app_2['app_id'])) {
      $app_ids[] = $this->a_app_2['app_id'];
    }
    if (!empty($this->a_app_3['app_id'])) {
      $app_ids[] = $this->a_app_3['app_id'];
    }

    // Teardown first (else teardown will sync assets sometimes to SOLR).
    parent::tearDown();

    // Remove it.
    if (!empty($app_ids)) {
      mediamosa_solr::delete_simpletest_documents($app_ids);
    }
  }
}
