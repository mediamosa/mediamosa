<?php
// $Id$

/**
 * MediaMosa is Open Source Software to build a Full Featured, Webservice
 * Oriented Media Management and Distribution platform (http://mediamosa.org)
 *
 * Copyright (C) 2011 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

/**
 * @file
 * Storage / mount-point module.
 */

/**
 * Implements hook_mediamosa_configuration_collect().
 */
function mediamosa_configuration_storage_mediamosa_configuration_collect() {
  $form['settings_mountpount'] = array(
    '#type' => 'fieldset',
    '#title' => t('Mount point / storage settings'),
    '#description' => t('Set the current mount point for storage point of your files. The Windows and Linux moint point must point to the same directory, they must share the same files. Although the windows mount point is not always required, only if you intend to support windows specific codex for transcoding on windows servers. You can enter \\\\ for windows mountpoint as default if you aren\'t using a windows server for transcoding.'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  $form['settings_mountpount']['mediamosa_current_mount_point'] = array(
    '#type' => 'textfield',
    '#title' => t('Linux mount point'),
    '#description' => t('Current Linux mount point.'),
    '#required' => TRUE,
    '#default_value' => variable_get('mediamosa_current_mount_point', ''),
  );

  $form['settings_mountpount']['mediamosa_current_mount_point_windows'] = array(
    '#type' => 'textfield',
    '#title' => t('Windows mount point'),
    '#description' => t('Current Windows mount point (use UNC path like \\\\server\\share\\file_path).'),
    '#required' => TRUE,
    '#default_value' => variable_get('mediamosa_current_mount_point_windows', ''),
  );

  return $form;
}

/**
 * Implements hook_mediamosa_settings_submit().
 */
function mediamosa_configuration_storage_mediamosa_configuration_submit($form, $form_state) {

  // Not in validate because its not fatal.
  if (mediamosa_configuration_storage::is_mount_setup()) {
    if (!mediamosa_io::is_writable(mediamosa_configuration_storage::mount_point_get())) {
      drupal_set_message(t('<em>Warning, your !os MediaMosa moint point is not writable.</em>', array('!os' => mediamosa::is_windows_platform() ? 'Windows' : 'Linux')), 'warning');
    }
  }
}

/**
 * Implements hook_mediamosa_register_rest_call().
 */
function mediamosa_configuration_storage_mediamosa_register_rest_call() {
  $a_rest_calls = array();
  // Get the linux mount point (1.x:  media_management_get_current_mount_point)
  $a_rest_calls['get_current_mount_point'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_get_current_mount_point',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::DESCRIPTION => 'Retrieve the (linux) mountpoint.',
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_configuration_storage',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_INTERNAL_ONLY,
  );

  return $a_rest_calls;
}
