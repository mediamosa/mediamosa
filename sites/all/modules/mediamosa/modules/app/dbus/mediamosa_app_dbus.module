<?php
// $Id$

/**
 * MediaMosa is Open Source Software to build a Full Featured, Webservice
 * Oriented Media Management and Distribution platform (http://mediamosa.org)
 *
 * Copyright (C) 2011 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

/**
 * @file
 * The APP authentication module.
 */

/**
 * Implements hook_mediamosa_register_rest_call().
 */
function mediamosa_app_dbus_mediamosa_register_rest_call() {
  $rest_calls = array();

  $rest_calls['login'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_app_ident',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_app_dbus',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_FOR_EXTERNAL,
    mediamosa_rest_call::BEHAVE_AS_EXTERNAL => TRUE,
  );

  // Allow also GET as POST for login.
  $rest_calls['login'][mediamosa_rest_call::METHOD_GET] = $rest_calls['login'][mediamosa_rest_call::METHOD_POST];

  $rest_calls['login/cookie'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_check_cookie',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_app_dbus',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_2_0_0,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_FOR_EXTERNAL,
    mediamosa_rest_call::BEHAVE_AS_EXTERNAL => TRUE,
  );

  return $rest_calls;
}

/**
 * Implements hook_mediamosa_register_rest_call_doc().
 */
function mediamosa_app_dbus_mediamosa_register_rest_call_doc() {
  $rest_calls = array();

  $rest_calls['login'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Log onto MediaMosa and authenticate as user end application',
    mediamosa_rest_call::DESCRIPTION => 'Log onto MediaMosa and authenticate as user end application.',
    mediamosa_rest_call::EXAMPLE_REQUEST => '/login<br /><br />dbus = "AUTH DBUS_COOKIE_SHA1 myuser"',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '<items>
  <item>
    DATA vpx 0 2541e50e009440742ea00f61fbf5b612
  </item>
</items>',
  );

  $rest_calls['login'][mediamosa_rest_call::METHOD_GET] = $rest_calls['login'][mediamosa_rest_call::METHOD_POST];

  $rest_calls['login/cookie'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Shows the contents of your cookie',
    mediamosa_rest_call::DESCRIPTION => 'Shows the contents of your cookie, for debugging purposes.',
    mediamosa_rest_call::EXAMPLE_REQUEST => '/login/cookie',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '<items>
  <item id="1">
    <SESS84ff6063a88f1185a7aa>28b53dd9bd4e22922bccfc354</SESS84ff6063a88f1185a7aa>
  </item>
</items>',
  );

  return $rest_calls;
}

/**
 * Implements hook_mediamosa_app_authorized().
 */
function mediamosa_app_dbus_mediamosa_app_authorized() {

  // DBUS.

  // App already logged in?
  if (isset($_SESSION['mediamosa_app']) && isset($_SESSION['mediamosa_app']['app_id'])) {
    $_GET['app_id'] = $_SESSION['mediamosa_app']['app_id'];
    return TRUE;
  }

  // White list.

  // If IP white list is set, then we are 'simulated' authorized.
  $ip_address_whitelist = variable_get('mediamosa_debug_ip_whitelist', '');

  // Get the IP Address.
  $a_ip_address_whitelist = explode('|', $ip_address_whitelist);

  // If our IP address is in the white list, then we are 'authorized', but only
  // if you also set the app_id.
  if (in_array($_SERVER['REMOTE_ADDR'], $a_ip_address_whitelist) && !empty($_REQUEST['app_id'])) {
    return TRUE;
  }

  // Access denied.

  return FALSE;
}
