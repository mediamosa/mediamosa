<?php
/**
 * @file
 * Unittests for app dbus module.
 */

class MediaMosaAppAuthenticationDbusTestCase extends MediaMosaTestCaseEga {

  public static function getInfo() {
    return array(
      'name' => 'APP - Challenge-reponse',
      'description' => 'Challenge-reponse authentication for end user applications.',
      'group' => MEDIAMOSA_TEST_GROUP_MEDIAMOSA_CORE_APP,
      mediamosa_settings::MEDIAMOSA_RUN => mediamosa_settings::MEDIAMOSA_RUN_15_MINUTES,
    );
  }

  function setUp() {
    // Run parent first so we are inside sandbox.
    // Call parent::setUp and preserve arguments.
    $args = func_get_args();

    // Our needed modules.
    $args = array_unique(
      array_merge(
        array(
          'mediamosa_app_dbus',
        ),
        $args
      )
    );

    if (drupal_substr(phpversion(), 0, 3) < '5.3') {
      call_user_func_array(array($this, 'parent::setUp'), $args);
    }
    else {
      call_user_func_array('parent::setUp', $args);
    }

    // Create and login user
    $rest_user = $this->drupalCreateUser(array(mediamosa_permission::ADMIN_MEDIAMOSA));
    $this->drupalLogin($rest_user);
  }

  function testAppAuthentication() {
    // Create all stuff needed for this test.
    $app = $this->createApp();
    $app_name = $app[mediamosa_app_db::APP_NAME];
    $shared_key = $app[mediamosa_app_db::SHARED_KEY];

    // Step 1: start auth and capture cookie
    $response = $this->restCall('login', 'POST', array('dbus' => 'AUTH DBUS_COOKIE_SHA1 ' . $app_name));
    $this->var_export($response['xml']->get());
    $dbus_data = explode(' ', $response['xml']->items->item->dbus);

    $this->assertTrue(drupal_substr($response['xml']->items->item->dbus, 0, 5) == 'DATA ', 'Login fase 1 success');

    list($cookie) = explode(';', $response['headers']['Set-Cookie']);
    $this->assertTrue(isset($response['headers']['Set-Cookie']), 'Cookie received in HTTP header: ' . $cookie);

    // Step 2: send the credentials
    $challenge = $dbus_data[3];
    $random = mediamosa_unicode::substr(md5(microtime(TRUE)), 0, 10);
    $post_data = array('dbus' => 'DATA ' . $random . ' ' . sha1(sprintf('%s:%s:%s', $challenge, $random, $shared_key)));
    $response = $this->restCall('login', 'POST', $post_data);

    $this->assertTrue($response['xml']->items->item->dbus == 'OK ' . mediamosa_app_dbus::APP_AUTH_SERVER_GUID, 'Login fase 2 success');
    $this->pass(check_plain(var_export($response['xml'], TRUE)));

    // Now test with suppling wrong password.

    // Remove cookie from unittest.
    $this->curlHandle = NULL;
    $this->cookieFile = NULL; // in current simpletest, this doesnt do much.

    // Step 1: start auth and capture cookie
    $response = $this->restCall('login', 'POST', array('dbus' => 'AUTH DBUS_COOKIE_SHA1 ' . $app_name));
    $this->pass(check_plain(var_export($response['xml'], TRUE)));
    $dbus_data = explode(' ', $response['xml']->items->item->dbus);

    $this->assertTrue(drupal_substr($response['xml']->items->item->dbus, 0, 5) == 'DATA ', 'Login fase 1 success');

    list($cookie) = explode(';', $response['headers']['Set-Cookie']);
    $this->assertTrue(isset($response['headers']['Set-Cookie']), 'Cookie received in HTTP header: ' . $cookie);


    // Step 2: send the credentials
    $challenge = $dbus_data[3];
    $random = mediamosa_unicode::substr(md5(microtime(TRUE)), 0, 10);
    $post_data = array('dbus' => 'DATA ' . $random . ' ' . sha1(sprintf('%s:%s:%s', $challenge, $random, $shared_key . 'boo')));
    $response = $this->restCall('login', 'POST', $post_data, array(), array(mediamosa_error::ERRORCODE_DBUS_PROTOCOL_ERROR));

    $this->assertTrue($response['xml']->items->item->dbus == 'REJECTED', 'Login must fail.');

    $this->pass(check_plain(var_export($challenge, TRUE)));
    $this->pass(check_plain(var_export($dbus_data, TRUE)));
    $this->pass(check_plain(var_export($post_data, TRUE)));

    $this->pass(check_plain(var_export($response['xml'], TRUE)));
  }
}
